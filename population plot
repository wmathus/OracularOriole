import pandas as pd
import plotly.express as px

# Sample data from the extended table
data = {
    "population_code": ["SAS"] * 60,
    "population_name": ["South Asian"] * 60,
    "Ethnicity": ["BPB"] * 6 + ["N/A"] * 20 + ["BPB?"] * 34,
    "snp_id": ["rs7903146", "rs10830963", "rs2972145", "rs7756992", "rs2191349", "rs9854769",
               "rs7531962", "rs12463719", "rs7432739", "rs7626079", "rs62366901", "rs74790763",
               "rs7765207", "rs73689877", "rs2980766", "rs62486442", "rs13257283", "rs2488597",
               "rs2114824", "rs10748694", "rs7123361", "rs9568861", "rs76141923", "rs28790585",
               "rs7261425", "rs2065703", "rs11708067", "rs9808924", "rs7766070", "rs10184004",
               "rs2203452", "rs1260326", "rs35142762", "rs12655753", "rs17036160", "rs13094957",
               "rs10916784", "rs61748094", "rs329122", "rs2714343", "rs6813195", "rs3775087",
               "rs13130845", "rs7629245", "rs3887925", "rs13066678", "rs935112", "rs76263492",
               "rs62259319", "rs1393202", "rs12746673", "rs59689207", "rs61818951", "rs7579323",
               "rs1012311", "rs10864859", "rs13387347", "rs16849467", "rs9873519", "rs1514895",
               "rs34311866", "rs13142804"],
    "allele_freq": [0.3, 0.41, 0.75, 0.29, 0.54, 0.41, 0.11, 0.32, 0.28, 0.64, 0.60, 0.94, 0.39, 0.12, 0.48, 0.34, 0.92, 0.84, 0.47, 0.42, 0.69, 0.15, 0.01, 0.33, 0.71, 0.15, 0.782, 0.43, 0.266, 0.741, 0.757, 0.754, 0.857, 0.889, 0.881, 0.76, 0.559, 0.967, 0.383, 0.463, 0.618, 0.201, 0.702, 0.24, 0.549, 0.44, 0.882, 0.039, 0.412, 0.052, 0.147, 0.142, 0.044, 0.755, 0.402, 0.941, 0.403, 0.637, 0.286, 0.721, 0.297, 0.164],
    "sample_size": [22490] * 6 + [197391, 272634, 197391, 197391, 197080, 272634, 197391, 272634, 264876, 190682, 272634, 272634, 271738, 272634, 228651, 272634, 186208, 197391, 272634, 197391, 41577] * 3
}

# Create a DataFrame
df = pd.DataFrame(data)

# Aggregate data by population
aggregated_data = df.groupby('population_name').agg({
    'allele_freq': 'mean',
    'sample_size': 'sum'
}).reset_index()

# Map population names to coordinates (latitude and longitude)
population_coords = {
    "South Asian": {"lat": 20.5937, "lon": 78.9629}
}

# Add coordinates to the DataFrame
aggregated_data['lat'] = aggregated_data['population_name'].map(lambda x: population_coords[x]['lat'])
aggregated_data['lon'] = aggregated_data['population_name'].map(lambda x: population_coords[x]['lon'])

# Create the map
fig = px.scatter_geo(aggregated_data,
                     lat='lat',
                     lon='lon',
                     size='sample_size',
                     color='allele_freq',
                     hover_name='population_name',
                     projection="natural earth",
                     title='Worldwide Population Distribution')

# Show the map
fig.show()

# To embed this in a website, you can use fig.write_html("map.html") to save the map as an HTML file
fig.write_html("map.html")
